// pages/BookingPage.jsx
import { useLocation } from 'react-router-dom';
import React, { useState } from 'react';

export default function BookingPage() {
  const location = useLocation();
  const rabbit = location.state?.rabbit;

  const [phone, setPhone] = useState('');
  const [successMessage, setSuccessMessage] = useState('');
  const [formData, setFormData] = useState({
    name: '',
    address: '',
    date: '',
    message: '',
    agree: false,
  });

  if (!rabbit) {
    return <div>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</div>;
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
  const handlePhoneChange = (e) => {
    const onlyNums = e.target.value.replace(/\D/g, ''); // ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
    if (onlyNums.length <= 10) {
      setPhone(onlyNums);
    }
  };

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value,
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á (‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° validation ‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏µ‡πâ)
    if (!formData.name || !phone || !formData.address || !formData.date || !formData.agree) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏ï‡∏Å‡∏•‡∏á');
      return;
    }

    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à
    setSuccessMessage('üéâ ‡∏à‡∏≠‡∏á‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ üêá');
  };

  return (
    <div className="p-6 max-w-3xl mx-auto">
      <h2 className="text-xl font-bold mb-4">
        üê∞ ‡∏à‡∏≠‡∏á‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢: {rabbit.name} ({rabbit.nickname}) ({rabbit.breed})
      </h2>

      <div className="flex gap-6 mb-4">
        <img src={rabbit.image} alt={rabbit.name} className="w-60 h-60 object-cover rounded-lg" />
        <div className="flex-1 space-y-2">
          <p>üîπ ‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå: {rabbit.breed}</p>
          <p>‚ö• ‡πÄ‡∏û‡∏®: {rabbit.gender === 'male' ? '‡∏ú‡∏π‡πâ' : '‡πÄ‡∏°‡∏µ‡∏¢'}</p>
          <p>üìÖ ‡∏≠‡∏≤‡∏¢‡∏∏: {rabbit.age} ‡∏õ‡∏µ</p>
          <p>üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏ä‡πà‡∏≤: {rabbit.price} ‡∏ö‡∏≤‡∏ó / 3 ‡∏ß‡∏±‡∏ô</p>
        </div>
      </div>

      <form className="space-y-4" onSubmit={handleSubmit}>
        <div>
          <label>üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏à‡∏≠‡∏á:</label>
          <input
            name="name"
            value={formData.name}
            onChange={handleChange}
            className="border w-full p-2 rounded"
          />
        </div>
        <div>
          <label>üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ (10 ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç):</label>
          <input
            type="text"
            value={phone}
            onChange={handlePhoneChange}
            className="border w-full p-2 rounded"
            inputMode="numeric"
            maxLength={10}
          />
        </div>
        <div>
          <label>üìç ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</label>
          <input
            name="address"
            value={formData.address}
            onChange={handleChange}
            className="border w-full p-2 rounded"
          />
        </div>
        <div>
          <label>üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ä‡πà‡∏≤:</label>
          <input
            type="date"
            name="date"
            value={formData.date}
            onChange={handleChange}
            className="border w-full p-2 rounded"
          />
        </div>
        <div>
          <label>üìù ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:</label>
          <textarea
            name="message"
            value={formData.message}
            onChange={handleChange}
            className="border w-full p-2 rounded"
            rows="3"
          />
        </div>
        <div>
          <label className="flex items-center gap-2">
            <input
              type="checkbox"
              name="agree"
              checked={formData.agree}
              onChange={handleChange}
            />
            ‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏ï‡∏Å‡∏•‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤
          </label>
        </div>
        <button
          type="submit"
          className="bg-green-400 hover:bg-green-500 text-white py-2 px-4 rounded"
        >
          ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
        </button>
      </form>

      {successMessage && (
        <div className="mt-6 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded">
          {successMessage}
        </div>
      )}
    </div>
  );
}
