// src/pages/CartPage.jsx
import React from "react";
import { useAuth } from '../context/AuthContext';
import { useCart } from '../context/CartContext';
import { useNavigate, Link } from 'react-router-dom';

const FALLBACK_IMG = 'https://placehold.co/200x200?text=Item';
const formatTHB = (n) =>
  new Intl.NumberFormat('th-TH', { style: 'currency', currency: 'THB' }).format(Number(n || 0));

function getImage(it) {
  return it.image || it.image_url || it.img || it.photo || FALLBACK_IMG;
}
function getId(it) {
  return it.id ?? it.product_id ?? it.rabbit_id ?? it._id ?? String(it.name || Math.random());
}
function getName(it) {
  return it.name || it.title || it.product_name || it.rabbit_name || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠';
}
function getUnitPrice(it) {
  return Number(it.price ?? it.unitPrice ?? it.amount ?? 0);
}
function getQty(it) {
  return Number(it.quantity ?? it.qty ?? 1);
}
function getType(it) {
  if (it.type) return String(it.type).toLowerCase();
  const cat = String(it.category || '').toLowerCase();
  if (cat.includes('equip')) return 'equipment';
  if (cat.includes('food')) return 'pet-food';
  return 'rabbit';
}
function detailLink(it) {
  const t = getType(it);
  const id = getId(it);
  if (t === 'equipment') return `/equipment/${id}`;
  if (t === 'pet-food') return `/pet-food/${id}`;
  return `/pets/${id}`;
}
// ‚úÖ ‡∏≠‡πà‡∏≤‡∏ô‡∏™‡∏ï‡πä‡∏≠‡∏Å‡∏à‡∏≤‡∏Å item (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö)
function getStock(it) {
  const s = Number(it.stock ?? it.available ?? it.qtyAvailable ?? NaN);
  return Number.isFinite(s) ? s : Infinity; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î
}

export default function CartPage() {
  const { user } = useAuth();
  const { cartItems, increment, decrement, setQty, removeFromCart } = useCart();
  const navigate = useNavigate();

  const subtotal = cartItems.reduce((sum, it) => sum + getUnitPrice(it) * getQty(it), 0);

  // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏™‡∏ï‡πä‡∏≠‡∏Å‡∏•‡∏î‡∏•‡∏á‡∏à‡∏ô‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏±‡∏ö‡∏•‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
  //    (‡∏Å‡∏±‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏¥‡πâ‡∏á‡πÑ‡∏ß‡πâ ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡∏ï‡πä‡∏≠‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô)
  React.useEffect(() => {
    for (const it of cartItems) {
      const id = getId(it);
      const stock = getStock(it);
      const qty = getQty(it);
      if (Number.isFinite(stock) && qty > stock) {
        setQty(id, Math.max(0, stock)); // 0 = ‡∏´‡∏°‡∏î ‚Üí ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏° + ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ
      }
    }
  }, [cartItems, setQty]);

  const handleCheckout = () => {
    if (!user) navigate('/get-started', { state: { from: '/checkout' } });
    else navigate('/checkout');
  };

  return (
    <div className="max-w-6xl mx-auto px-4 md:px-6 py-8">
      {/* ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ + breadcrumb */}
      <div className="mb-6">
        <div className="text-sm text-neutral-500 mb-1">
          <Link to="/" className="hover:underline">‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å</Link> <span className="mx-1">/</span> ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
        </div>
        <h1 className="text-3xl font-extrabold tracking-tight flex items-center gap-2">
          <span>üõí</span> ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
        </h1>
      </div>

      {/* ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤ */}
      {cartItems.length === 0 ? (
        <div className="bg-white rounded-2xl shadow-sm border p-10 text-center">
          <p className="text-lg text-neutral-600">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤</p>
          <div className="mt-6 flex flex-wrap justify-center gap-3">
            <Link to="/pets" className="px-4 py-2 rounded-full border hover:bg-neutral-50">‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢</Link>
            <Link to="/pet-food" className="px-4 py-2 rounded-full border hover:bg-neutral-50">‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á</Link>
            <Link to="/equipment" className="px-4 py-2 rounded-full border hover:bg-neutral-50">‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</Link>
          </div>
        </div>
      ) : (
        // ‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: 2 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          {/* ‡∏ã‡πâ‡∏≤‡∏¢: ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
          <div className="md:col-span-2 space-y-4">
            {cartItems.map((item) => {
              const id = getId(item);
              const qty = getQty(item);
              const unit = getUnitPrice(item);
              const name = getName(item);
              const img = getImage(item);
              const link = detailLink(item);
              const type = getType(item);
              const stock = getStock(item);
              const outOfStock = Number.isFinite(stock) && stock <= 0;

              return (
                <div key={id} className="bg-white border rounded-2xl p-4 shadow-sm hover:shadow-md transition">
                  <div className="flex gap-4">
                    <Link to={link} className="shrink-0">
                      <img
                        src={img}
                        alt={name}
                        className="w-24 h-24 rounded-xl object-cover"
                        onError={(e) => { e.currentTarget.src = FALLBACK_IMG; }}
                      />
                    </Link>

                    <div className="flex-1 min-w-0">
                      <div className="flex items-start justify-between gap-4">
                        <div className="min-w-0">
                          <Link to={link} className="text-lg font-semibold hover:underline line-clamp-1">
                            {name}
                          </Link>

                          <div className="mt-1 flex items-center gap-2 text-sm text-neutral-500">
                            <span className="px-2 py-0.5 rounded-full border text-xs">
                              {type === 'rabbit' ? '‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢' : type === 'pet-food' ? '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏±‡∏ï‡∏ß‡πå' : '‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå'}
                            </span>

                            {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
                            {Number.isFinite(stock) && (
                              <>
                                <span>‚Ä¢</span>
                                {outOfStock ? (
                                  <span className="text-rose-600">‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏î</span>
                                ) : (
                                  <span className="text-slate-600">
                                    ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ <b>{stock}</b>
                                  </span>
                                )}
                              </>
                            )}

                            <span>‚Ä¢</span>

                            {/* ‡∏ï‡∏±‡∏ß‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡∏•‡πá‡∏≠‡∏Å‡∏ï‡∏≤‡∏°‡∏™‡∏ï‡πä‡∏≠‡∏Å) */}
                            <div className="flex items-center gap-2">
                              <button
                                onClick={() => decrement(id)}
                                className="w-8 h-8 rounded-full border flex items-center justify-center hover:bg-neutral-50 disabled:opacity-50"
                                aria-label="‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"
                                title="‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"
                                disabled={outOfStock || qty <= 1}
                              >
                                ‚Äì
                              </button>

                              <input
                                type="number"
                                min={1}
                                max={Number.isFinite(stock) ? stock : undefined}
                                value={outOfStock ? 0 : qty}
                                onChange={(e) => {
                                  const val = e.target.value;
                                  if (val === '') return; // ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏ß‡πà‡∏≤‡∏á‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
                                  let n = Math.max(0, Number(val) || 0);
                                  if (Number.isFinite(stock)) n = Math.min(stock, n); // ‚úÖ clamp ‡∏ï‡∏≤‡∏°‡∏™‡∏ï‡πä‡∏≠‡∏Å
                                  setQty(id, n);
                                }}
                                onBlur={(e) => {
                                  // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏Ç‡∏≠‡∏á
                                  if (e.target.value === '' && !outOfStock) setQty(id, 1);
                                }}
                                className="w-14 text-center border rounded-lg py-1 disabled:opacity-50"
                                disabled={outOfStock}
                              />

                              <button
                                onClick={() => {
                                  if (!Number.isFinite(stock) || qty < stock) increment(id);
                                }}
                                className="w-8 h-8 rounded-full border flex items-center justify-center hover:bg-neutral-50 disabled:opacity-50"
                                aria-label="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"
                                title="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"
                                disabled={outOfStock || (Number.isFinite(stock) && qty >= stock)}
                              >
                                +
                              </button>
                            </div>
                          </div>
                        </div>

                        <button
                          onClick={() => removeFromCart(id)}
                          className="text-red-600 hover:text-red-700 text-sm px-3 py-1 rounded-full border border-red-200 hover:bg-red-50"
                          title="‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤"
                        >
                          ‡∏•‡∏ö
                        </button>
                      </div>

                      <div className="mt-3 flex items-center justify-between">
                        <div className="text-sm text-neutral-500">
                          ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢: <span className="font-medium text-neutral-700">{formatTHB(unit)}</span>
                        </div>
                        <div className="text-lg font-bold text-emerald-600">
                          {formatTHB(unit * qty)}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>

          {/* ‡∏Ç‡∏ß‡∏≤: ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */}
          <aside className="md:col-span-1">
            <div className="bg-white border rounded-2xl p-5 shadow-sm md:sticky md:top-6">
              <h2 className="text-lg font-bold mb-4">‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</h2>

              <div className="space-y-2 text-sm">
                <div className="flex justify-between">
                  <span>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</span>
                  <span className="font-medium">{formatTHB(subtotal)}</span>
                </div>
                <div className="flex justify-between text-neutral-500">
                  <span>‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</span>
                  <span>‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ï‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</span>
                </div>
              </div>

              <div className="my-4 border-t" />
              <div className="flex justify-between items-center text-base font-semibold">
                <span>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°</span>
                <span className="text-emerald-600">{formatTHB(subtotal)}</span>
              </div>

              <button
                onClick={handleCheckout}
                className="mt-5 w-full bg-pink-500 hover:bg-pink-600 text-white font-semibold py-3 rounded-xl shadow-md transition-transform hover:scale-[1.01] active:scale-[0.99]"
              >
                ‚úÖ ‡πÑ‡∏õ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
              </button>

              <Link to="/" className="mt-3 block text-center text-sm text-neutral-600 hover:text-neutral-800">
                ‚Üê ‡πÑ‡∏õ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡πà‡∏≠
              </Link>

              <p className="mt-4 text-xs text-neutral-500">
                * ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
              </p>
            </div>
          </aside>
        </div>
      )}
    </div>
  );
}
